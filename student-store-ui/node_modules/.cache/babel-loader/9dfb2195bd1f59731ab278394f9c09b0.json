{"ast":null,"code":"/**\n * Function that removes an item from the shopping cart\n *\n * @param {Item} item - the item to remove\n * @return {Cart}\n */\nexport const removeFromCart = (cart, item) => {\n  const newCart = { ...cart,\n    [item.id]: cart[item.id] - 1\n  };\n\n  if (newCart[item.id] <= 0) {\n    delete newCart[item.id];\n  }\n\n  return newCart;\n};\n/**\n * Function that adds an item to the cart and then returns the cart\n *\n * @param {Item} item - the item to add\n * @return {Cart}\n */\n\nexport const addToCart = (cart, item) => {\n  if (cart.hasOwnProperty(item.id)) {\n    return { ...cart,\n      [item.id]: cart[item.id] + 1\n    };\n  }\n\n  return { ...cart,\n    [item.id]: 1\n  };\n};\n/**\n * Function that determines the number of items currently in the cart for a particular item\n *\n * @param {Item} item - the item in question\n * @return {Number}\n */\n\nexport const getQuantityOfItemInCart = (cart, item) => {\n  return cart[item.id] || 0;\n};\nexport const getTotalItemsInCart = cart => {\n  const ids = Object.keys(cart);\n  if (!(ids === null || ids === void 0 ? void 0 : ids.length)) return 0;\n  return ids.reduce((acc, id) => {\n    return acc + cart[id];\n  }, 0);\n};","map":{"version":3,"sources":["/Users/nasradin/Desktop/codepath/week5/student_store_pt2_/student-store-ui/src/utils/cart.js"],"names":["removeFromCart","cart","item","newCart","id","addToCart","hasOwnProperty","getQuantityOfItemInCart","getTotalItemsInCart","ids","Object","keys","length","reduce","acc"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC5C,QAAMC,OAAO,GAAG,EACd,GAAGF,IADW;AAEd,KAACC,IAAI,CAACE,EAAN,GAAWH,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,GAAgB;AAFb,GAAhB;;AAKA,MAAID,OAAO,CAACD,IAAI,CAACE,EAAN,CAAP,IAAoB,CAAxB,EAA2B;AACzB,WAAOD,OAAO,CAACD,IAAI,CAACE,EAAN,CAAd;AACD;;AAED,SAAOD,OAAP;AACD,CAXM;AAaP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,SAAS,GAAG,CAACJ,IAAD,EAAOC,IAAP,KAAgB;AACvC,MAAID,IAAI,CAACK,cAAL,CAAoBJ,IAAI,CAACE,EAAzB,CAAJ,EAAkC;AAChC,WAAO,EACL,GAAGH,IADE;AAEL,OAACC,IAAI,CAACE,EAAN,GAAWH,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,GAAgB;AAFtB,KAAP;AAID;;AAED,SAAO,EACL,GAAGH,IADE;AAEL,KAACC,IAAI,CAACE,EAAN,GAAW;AAFN,GAAP;AAID,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,uBAAuB,GAAG,CAACN,IAAD,EAAOC,IAAP,KAAgB;AACrD,SAAOD,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,IAAiB,CAAxB;AACD,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAIP,IAAD,IAAU;AAC3C,QAAMQ,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYV,IAAZ,CAAZ;AACA,MAAI,EAACQ,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEG,MAAN,CAAJ,EAAkB,OAAO,CAAP;AAElB,SAAOH,GAAG,CAACI,MAAJ,CAAW,CAACC,GAAD,EAAMV,EAAN,KAAa;AAC7B,WAAOU,GAAG,GAAGb,IAAI,CAACG,EAAD,CAAjB;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAPM","sourcesContent":["/**\n * Function that removes an item from the shopping cart\n *\n * @param {Item} item - the item to remove\n * @return {Cart}\n */\nexport const removeFromCart = (cart, item) => {\n  const newCart = {\n    ...cart,\n    [item.id]: cart[item.id] - 1,\n  }\n\n  if (newCart[item.id] <= 0) {\n    delete newCart[item.id]\n  }\n\n  return newCart\n}\n\n/**\n * Function that adds an item to the cart and then returns the cart\n *\n * @param {Item} item - the item to add\n * @return {Cart}\n */\nexport const addToCart = (cart, item) => {\n  if (cart.hasOwnProperty(item.id)) {\n    return {\n      ...cart,\n      [item.id]: cart[item.id] + 1,\n    }\n  }\n\n  return {\n    ...cart,\n    [item.id]: 1,\n  }\n}\n\n/**\n * Function that determines the number of items currently in the cart for a particular item\n *\n * @param {Item} item - the item in question\n * @return {Number}\n */\nexport const getQuantityOfItemInCart = (cart, item) => {\n  return cart[item.id] || 0\n}\n\nexport const getTotalItemsInCart = (cart) => {\n  const ids = Object.keys(cart)\n  if (!ids?.length) return 0\n\n  return ids.reduce((acc, id) => {\n    return acc + cart[id]\n  }, 0)\n}\n"]},"metadata":{},"sourceType":"module"}